name: Run-Tests
run-name: ${{ github.actor }} running action test L08 Q2
on: [push]

jobs:
  Run-Pytest:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.run-pytest-step.outputs.output1 }}
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x' 

      - name: Install Dependencies
        run: |
          pip install pytest numpy 

      - id: run-pytest-step
        run: |
          cd working 
          pytest --junitxml=pytest_report.xml 2>&1 | tee pytest_output.log 
          if grep -q "FAILED" pytest_output.log; then
            echo "Tests failed"
            echo "::set-output name=output1::fail"
            exit 1
          else
            echo "All tests passed"
            echo "::set-output name=output1::pass"
          fi
        continue-on-error: true

      - name: Upload Pytest Results
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results
          path: |
            working/pytest_output.log
            working/pytest_report.xml

  Authorize-the-Commit:
    runs-on: ubuntu-latest
    needs: Run-Pytest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
            fetch-depth: 0
      - name: Set up Git account
        run: |
            git config --global user.name "Massimo Girola"
            git config --global user.email "m.girola2@campus.unimib.it"
      - env: 
            OUTPUT1: ${{ needs.Run-Pytest.outputs.output1 }}
        run: |
            echo "The output of the previous job was $OUTPUT1"
            if [ "$OUTPUT1" = "fail" ]; then
                echo "Tests not passed."
                git reset --hard HEAD~1 
                git push --force
                exit 1
            else
                echo "Tests passed. Proceeding with the commit."
            fi